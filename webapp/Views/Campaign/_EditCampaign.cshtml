@model BusinessObjects.Campaign
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h3>Editar Campaña</h3>
        </div>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        @using (Ajax.BeginForm("EditCampaign", new AjaxOptions { OnSuccess = "SaveSucces", OnFailure = "SaveError" }))
        {
            <div class="modal-body">
                <div class="form-horizontal">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.idCampaign)
                    <div id="ValidationSummary" class="text-danger col-lg-offset-4"></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.name, "Nombre de la campaña", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control dvBlock" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.idStateCampaign, "Estado", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.DropDownList("listStateCampaign", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.urlImage, "URL imagen", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.urlImage, new { htmlAttributes = new { @class = "form-control dvBlock" } })
                            @Html.ValidationMessageFor(model => model.urlImage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.description, "Descripción", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control dvBlock" } })
                            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.idProduct, "Producto", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.DropDownList("listStateCampaign", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.startDate, "Fecha inicial", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control dvBlock" } })
                            @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.endDate, "Fecha final", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control dvBlock" } })
                            @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" type="submit"><span class="glyphicon glyphicon-floppy-disk"></span> Guardar</button>
            </div>
        }
    </div>
</div>
<script>
    $("#IdTrTipoVigilado").on("change", function () {
        var target = '#' + $(this).attr("target");
        var Value = null;
        $(target).empty();
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetSubTipoVigilado")",
            datatype: "Json",
            data: { Id: $(this).val() },
            success: function (data) {
                $.each(data, function (index, Item) {
                    $(target).append('<option value="' + Item.Value + '">' + Item.Text + '</option>');
                    if (Value == null)
                        Value = Item.Value;
                });
                $(target).trigger('change');
            }
        });
    });

    $("#IdTrSubTipoVigilado").on("change", function () {
        var target = '#' + $(this).attr("target");
        console.log(target);
        $(target).empty();
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetGrupoTipoVigilado")",
            datatype: "Json",
            data: { Id: $(this).val() },
            success: function (data) {
                $.each(data, function (index, Item) {
                    $(target).append('<option value="' + Item.Value + '">' + Item.Text + '</option>');
                });
            }
        });
    });

    var SaveSucces = function (data) {
        $("#EditCampaign").modal("hide");
        console.log(data);
        alert(data);
    };

    function SaveError() {
        alert("No se pudo completar la operación.");
    }
</script>